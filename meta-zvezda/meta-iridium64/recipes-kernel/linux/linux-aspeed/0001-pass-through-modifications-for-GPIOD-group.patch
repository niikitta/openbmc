From 369af252ce5e7e08ac724c44036d8ddbf63803f8 Mon Sep 17 00:00:00 2001
From: Nikita Pavlov <“niikitta@yahoo.com”>
Date: Wed, 11 May 2022 14:29:51 +0300
Subject: [PATCH] pass-through modifications for GPIOD group

---
 drivers/gpio/gpio-aspeed.c                 |  5 ++++-
 drivers/pinctrl/aspeed/pinctrl-aspeed-g5.c | 10 +++++-----
 2 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/gpio/gpio-aspeed.c b/drivers/gpio/gpio-aspeed.c
index 318a7d95a1a8..5dc102cba01d 100644
--- a/drivers/gpio/gpio-aspeed.c
+++ b/drivers/gpio/gpio-aspeed.c
@@ -1137,13 +1137,16 @@ static int __init aspeed_gpio_probe(struct platform_device *pdev)
 {
 	const struct of_device_id *gpio_id;
 	struct aspeed_gpio *gpio;
+	struct pinctrl *pinctrl;
 	int rc, i, banks, err;
 	u32 ngpio;
 
 	gpio = devm_kzalloc(&pdev->dev, sizeof(*gpio), GFP_KERNEL);
 	if (!gpio)
 		return -ENOMEM;
-
+	pinctrl = pinctrl_get_select(&pdev->dev, "pass-through");
+	if (pinctrl)
+		pinctrl_put(pinctrl);
 	gpio->base = devm_platform_ioremap_resource(pdev, 0);
 	if (IS_ERR(gpio->base))
 		return PTR_ERR(gpio->base);
diff --git a/drivers/pinctrl/aspeed/pinctrl-aspeed-g5.c b/drivers/pinctrl/aspeed/pinctrl-aspeed-g5.c
index 69a05a03dd63..52db30a211bb 100644
--- a/drivers/pinctrl/aspeed/pinctrl-aspeed-g5.c
+++ b/drivers/pinctrl/aspeed/pinctrl-aspeed-g5.c
@@ -205,7 +205,7 @@ FUNC_GROUP_DECL(SD1, C12, A12, B12, D9, D10, E12, C11, B11);
 
 #define F19 24
 SIG_EXPR_LIST_DECL_SINGLE(F19, SD2CLK, SD2, SD2_DESC);
-SIG_EXPR_DECL_SINGLE(GPID0IN, GPID0, GPID0_DESC);
+SIG_EXPR_DECL_SINGLE(GPID0IN, GPID0);
 SIG_EXPR_DECL_SINGLE(GPID0IN, GPID, GPID_DESC);
 SIG_EXPR_LIST_DECL_DUAL(F19, GPID0IN, GPID0, GPID);
 PIN_DECL_2(F19, GPIOD0, SD2CLK, GPID0IN);
@@ -223,7 +223,7 @@ FUNC_GROUP_DECL(GPID0, F19, E21);
 
 #define F20 26
 SIG_EXPR_LIST_DECL_SINGLE(F20, SD2DAT0, SD2, SD2_DESC);
-SIG_EXPR_DECL_SINGLE(GPID2IN, GPID2, GPID2_DESC);
+SIG_EXPR_DECL_SINGLE(GPID2IN, GPID2);
 SIG_EXPR_DECL_SINGLE(GPID2IN, GPID, GPID_DESC);
 SIG_EXPR_LIST_DECL_DUAL(F20, GPID2IN, GPID2, GPID);
 PIN_DECL_2(F20, GPIOD2, SD2DAT0, GPID2IN);
@@ -2785,8 +2785,8 @@ static int aspeed_g5_sig_expr_set(struct aspeed_pinmux_data *ctx,
 	return 0;
 }
 
-#define GPIOE1 33
-#define GPIOE3 35
+#define GPIOD1 25
+#define GPIOD3 27
 static void aspeed_g5_gpio_disable_free(struct pinctrl_dev *pctldev,
 			      struct pinctrl_gpio_range *range,
 			      unsigned int offset)
@@ -2795,7 +2795,7 @@ static void aspeed_g5_gpio_disable_free(struct pinctrl_dev *pctldev,
 	 * If we're freeing GPIOE1 (33) or GPIOE3 (35) then re-enable the
 	 * pass-through mux setting; otherwise, do nothing.
 	 */
-	if (offset != GPIOE1 && offset != GPIOE3)
+	if (offset != GPIOD1 && offset != GPIOD3)
 		return;
 
 	aspeed_gpio_disable_free(pctldev, range, offset);
-- 
2.30.2

